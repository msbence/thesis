apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: backend
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - webshop-beta-api.mbraptor.tech
    secretName: tls-mbraptor.tech
  rules:
  - host: webshop-beta-api.mbraptor.tech
    http:
      paths:
      - backend:
          serviceName: backend
          servicePort: 8081

---

apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    run: backend
spec:
  ports:
  - port: 8081
    targetPort: 8081
    protocol: TCP
  selector:
    run: backend

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  selector:
    matchLabels:
      run: backend
  replicas: 2
  template:
    metadata:
      labels:
        run: backend
    spec:
      containers:
      - name: backend
        image: 123456789.dkr.ecr.eu-central-1.amazonaws.com/webshop-backend:$IMAGE_TAG
        ports:
        - containerPort: 8081
        readinessProbe:
          httpGet:
             path: /api
             port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
        livenessProbe:
          httpGet:
             path: /api
             port: 8081
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
        resources:
          requests:
            cpu: 100m
            memory: 256Mi

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: backend
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 50

---

apiVersion: v1
kind: Secret
data:
  tls.crt: ...
  tls.key: ...
metadata:
  name: tls-mbraptor.tech
type: kubernetes.io/tls